name: Deploy baton user api

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    environment: deploy
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setting .env.prod for each apps
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env.prod
          echo "DATABASES_NAME=${{ secrets.DATABASES_NAME }}" >> .env.prod
          echo "DATABASES_USER=${{ secrets.DATABASES_USER }}" >> .env.prod
          echo "DATABASES_PASSWORD=${{ secrets.DATABASES_PASSWORD }}" >> .env.prod
          echo "DATABASES_HOST=${{ secrets.DATABASES_HOST }}" >> .env.prod
          echo "DATABASES_PORT=${{ secrets.DATABASES_PORT }}" >> .env.prod
          echo "KAKAO_REST_API_KEY=${{ secrets.KAKAO_REST_API_KEY }}" >> .env.prod
          echo "AWS_S3_ACCESS_KEY_ID=${{ secrets.AWS_S3_ACCESS_KEY_ID }}" >> .env.prod
          echo "AWS_S3_SECRET_ACCESS_KEY=${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}" >> .env.prod
          cp .env.prod auth-server/
          cp .env.prod user-api/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Setting .env for docker-compose
        run: |
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> .env
          echo "IMAGE_TAG=${{ github.sha }}" >> .env
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}

      - name: Build and push auth-server
        uses: docker/build-push-action@v3
        with:
          context: ./auth-server
          file: Dockerfile.prod
          push: true
          tags: ${{ env.ECR_REGISTRY }}/auth-server:${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.ECR_REGISTRY }}/auth-server:buildcache
          cache-to: type=registry,ref=${{ env.ECR_REGISTRY }}/auth-server:buildcache,mode=max

      - name: Build and push user-api
        uses: docker/build-push-action@v3
        with:
          context: ./user-api
          file: Dockerfile.prod
          push: true
          tags: ${{ env.ECR_REGISTRY }}/user-api:${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.ECR_REGISTRY }}/user-api:buildcache
          cache-to: type=registry,ref=${{ env.ECR_REGISTRY }}/user-api:buildcache,mode=max