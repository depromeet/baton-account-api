name: Deploy baton user api

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: deploy
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: baton-user-api
          IMAGE_TAG: ${{ github.sha }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASES_NAME: ${{ secrets.DATABASES_NAME }}
          DATABASES_USER: ${{ secrets.DATABASES_USER }}
          DATABASES_PASSWORD: ${{ secrets.DATABASES_PASSWORD }}
          DATABASES_HOST: ${{ secrets.DATABASES_HOST }}
          DATABASES_PORT: ${{ secrets.DATABASES_PORT }}
          KAKAO_REST_API_KEY: ${{ secrets.KAKAO_REST_API_KEY }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker run -dit -p 8000:8000 --name $ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker ps -a
          docker logs -f $ECR_REPOSITORY
