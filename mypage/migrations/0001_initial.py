# Generated by Django 4.0.3 on 2022-06-03 15:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holder', models.CharField(max_length=255)),
                ('bank', models.CharField(max_length=255)),
                ('number', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Account',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'Bookmark',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'Tag',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=255)),
                ('price', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('state', models.IntegerField(help_text='양도권 상태 (0: 판매중, 1: 예약중, 2: 판매완료)')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('tag_hash', models.BigIntegerField()),
                ('is_membership', models.IntegerField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('remaining_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Ticket',
                'ordering': ['-created_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('social_user', models.OneToOneField(db_column='id', help_text='User ID(integer)', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='app_user', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=255)),
                ('nickname', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=255)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('account', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mypage.account')),
            ],
            options={
                'db_table': 'User',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TicketTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mypage.tag')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mypage.ticket')),
            ],
            options={
                'db_table': 'TicketTag',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='ticket',
            name='bookmark_users',
            field=models.ManyToManyField(related_name='bookmark_tickets', through='mypage.Bookmark', to='mypage.user'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='buyer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='buy_tickets', to='mypage.user'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='sell_tickets', to='mypage.user'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='tags',
            field=models.ManyToManyField(related_name='tickets', through='mypage.TicketTag', to='mypage.tag'),
        ),
        migrations.CreateModel(
            name='Buy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, help_text='구매일시', null=True)),
                ('ticket', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='mypage.ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='buys', to='mypage.user')),
            ],
            options={
                'db_table': 'Buy',
                'ordering': ['-date'],
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='bookmark',
            name='ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='bookmarks', to='mypage.ticket'),
        ),
        migrations.AddField(
            model_name='bookmark',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='bookmarks', to='mypage.user'),
        ),
    ]
